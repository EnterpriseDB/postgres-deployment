- name: check the behavior
  any_errors_fatal: True
  max_fail_percentage: 0
  gather_facts: no
  hosts: localhost
  become: no

  tasks:
     - name: Set facts
       set_fact:
          disable_logging: false
          pem_server_public_ip: "{{ hostvars['pemserver1']['ansible_host'] }}"
          route53_zone: "edbpov.io"
          route53_record: "edbpov.io"
          domain: "edbpov.io"
          route_ip_addressess: []

     - name: Get the route3 information
       community.aws.route53:
         aws_access_key: "{{ route53_access_key }}"
         aws_secret_key: "{{ route53_secret }}"
         state: get
         zone: "{{ route53_zone }}"
         record: "{{ route53_record }}"
         type: A
       register: rec

     - name: Store the value of existsing ip address in a variable
       set_fact:
         route_ip_addressess: "{{ rec.set.ResourceRecords | map(attribute='Value') | unique | list }}"

     - name: Remove the pem server ips in rec values
       set_fact:
           route_ip_addressess: "{{ route_ip_addressess | difference([pem_server_public_ip]) }}"
       when:
       - pem_server_public_ip in route_ip_addressess
       - rec.set.ResourceRecords|length > 0

     - name: Update a route53 for customer dns
       community.aws.route53:
         aws_access_key: "{{ route53_access_key }}"
         aws_secret_key: "{{ route53_secret }}"
         state: present
         zone: "{{ route53_zone }}"
         record: "{{ route53_record }}"
         type: A
         value: "{{ route_ip_addressess|join(',') }}"
         overwrite: yes
         wait: yes

     - name: Remove a url entry in route53
       community.aws.route53:
          aws_access_key: "{{ route53_access_key }}"
          aws_secret_key: "{{ route53_secret }}"
          state: absent
          zone: "{{ route53_zone }}"
          record: "{{ project }}pem.{{ domain }}"
          type: A
          value: "{{ pem_server_public_ip }}"
          wait: yes
