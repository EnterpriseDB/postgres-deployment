---
- name: Gather service facts
  service_facts:

- name: Open Postgres TCP port 80
  ansible.posix.firewalld:
    port: "80/tcp"
    permanent: yes
    state: enabled
    immediate: true
  when:
    - ansible_facts.services['firewalld.service'] is defined
    - ansible_facts.services['firewalld.service'].state == 'running'
    - ansible_facts.services['firewalld.service'].status == 'enabled'
  become: yes

- name: shutdown the httpd service
  systemd:
    name: httpd
    state: stopped
  become: yes

- name: install certbot on pem server
  package:
    name: certbot
    state: present
  become: yes

- name: execute certbot to getting the certificates
  shell: |
      set -o pipefail
      set -eu
      certbot certonly --standalone \
            --preferred-challenges http \
            -d {{ project }}pem.{{ domain }} \
            -m {{ email_id }} \
            --agree-tos -n
  args:
     executable: /bin/bash
  become: yes
  register: certbot_output
  changed_when: certbot_output.rc == 0
  failed_when: certbot_output.rc != 0

- name: update the edb-ssl-pem.conf
  lineinfile:
     path: "/etc/httpd/conf.d/edb-ssl-pem.conf"
     regexp: "{{ line_item.from| regex_escape() }}"
     line: "{{ line_item.to }}"
     state: present
  become: yes
  with_items:
    - "from": "/usr/edb/pem/bin/../resources/server-pem.crt"
      "to": "SSLCertificateFile '/etc/letsencrypt/live/{{ project }}pem.{{ domain }}/cert.pem'"
    - "from": "/usr/edb/pem/bin/../resources/server-pem.key"
      "to": "SSLCertificateKeyFile '/etc/letsencrypt/live/{{ project }}pem.{{ domain }}/privkey.pem'"
  loop_control:
    loop_var: line_item

- name: add full chain information in edb-ssl-pem.conf
  lineinfile:
     path: "/etc/httpd/conf.d/edb-ssl-pem.conf"
     insertafter: '^SSLCertificateKeyFile'
     line: "{{ line_item }}"
     state: present
  become: yes
  with_items:
    - "SSLCertificateChainFile '/etc/letsencrypt/live/{{ project }}pem.{{ domain }}/fullchain.pem'"
  loop_control:
    loop_var: line_item

- name: start the httpd service
  systemd:
    name: httpd
    state: started
  become: yes
