---
 - hosts: all

   tasks:


     - name: Install the latest edb repo for pg10,11,12 DB engine
       yum:
         name: https://yum.enterprisedb.com/edb-repo-rpms/edb-repo-latest.noarch.rpm
         state: present
       become: yes
       register: result
       when: inventory_hostname == NEWSLAVE and DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Move file for pg10,11,12 DB engine
       shell: mv /etc/yum.repos.d/edb.repo /etc/yum.repos.d/edb.repo.bkp
       become: yes
       run_once: true  
       when: inventory_hostname == NEWSLAVE and DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Create repo file for pg10,11,12 DB engine
       blockinfile:
         path: /etc/yum.repos.d/edb.repo
         create: yes
         block: |
            [edb]
            name=EnterpriseDB RPMs $releasever - $basearch
            baseurl=https://{{USER}}:{{PASS}}@yum.enterprisedb.com/edb/redhat/rhel-$releasever-$basearch
            enabled=1
            gpgcheck=1
            gpgkey=file:///etc/pki/rpm-gpg/ENTERPRISEDB-GPG-KEY
       become: yes
       when: inventory_hostname == NEWSLAVE and DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'
   
     - name: install psycopg2
       yum: 
         name:  python-psycopg2
         state: present
       become: yes
       when: inventory_hostname == NEWSLAVE

     - name: Whitelist new server pg_hba file for epas10 dbengine
       lineinfile:
          path: /var/lib/edb/as10/data/pg_hba.conf
          line: host edb edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'epas10' and inventory_hostname != NEWSLAVE

     - name: Whitelist new server  pg_hba file for epas11 dbengine
       lineinfile:
          path: /var/lib/edb/as11/data/pg_hba.conf
          line: host edb edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'epas11' and inventory_hostname != NEWSLAVE

     - name: Whitelist new server  pg_hba file for epas10 dbengine
       lineinfile:
          path: /var/lib/edb/as12/data/pg_hba.conf
          line: host edb edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'epas12' and inventory_hostname != NEWSLAVE 

     - name: Whitelist new server  pg_hba file for pg10 dbengine
       lineinfile:
          path: /var/lib/pgsql/10/data/pg_hba.conf
          line: host postgres edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'pg10' and inventory_hostname != NEWSLAVE 

     - name: Whitelist new server pg_hba file for pg11 dbengine
       lineinfile:
          path: /var/lib/pgsql/11/data/pg_hba.conf
          line: host postgres edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'pg11' and inventory_hostname != NEWSLAVE 

     - name: Whitelist new server  pg_hba file for pg12 dbengine
       lineinfile:
          path: /var/lib/pgsql/12/data/pg_hba.conf
          line: host postgres edbefm {{ NEWSLAVE }}/32 md5
       become: yes
       when: DB_ENGINE == 'pg12' and inventory_hostname != NEWSLAVE 

     - name: Replace value as per DB engine for epas10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g' | sed 's/^/as/' 
       register: epasdbname
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'


     - name: Replace value as per DB engine for pg10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g' 
       register: pgdbname
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'
  
     - name: Get service name for epas10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g'
       register: servicename
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'
          
     - name: Reload DB service for EPAS
       systemd:
         name: "edb-as-{{servicename.stdout}}"
         state: reloaded
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'

     - name: Reload DB service for PG 
       systemd:
         name: "postgresql-{{pgdbname.stdout}}"
         state: reloaded
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Add new server IP in efm.nodes file of master
       lineinfile:
          path: /etc/edb/efm-3.8/efm.nodes
          line: "{{ NEWSLAVE }}:7800"
       become: yes
       when: inventory_hostname == MASTER 


     - name: Allow New Node for EFM operation on master
       shell: /usr/edb/efm-3.8/bin/efm allow-node efm {{ NEWSLAVE }}
       become: yes
       when: inventory_hostname == MASTER

     - name: Restart EFM service on master
       systemd:
         name: efm-3.8
         state: restarted
       become: yes
       when: inventory_hostname == MASTER

     - name: Add new server IP in efm.nodes file of slave1
       lineinfile:
         path: /etc/edb/efm-3.8/efm.nodes
         line: "{{ NEWSLAVE }}:7800"
       become: yes
       when: inventory_hostname == SLAVE1

     - name: Restart EFM service on slave1
       systemd: 
         name: efm-3.8
         state: restarted
       become: yes
       when: inventory_hostname == SLAVE1   

     - name: Add new server IP in efm.nodes file of slave2
       lineinfile:
         path: /etc/edb/efm-3.8/efm.nodes
         line: "{{ NEWSLAVE }}:7800"
       become: yes
       when: inventory_hostname == SLAVE2

     - name: Restart EFM service on slave2
       systemd:
         name: efm-3.8
         state: restarted
       become: yes
       when: inventory_hostname == SLAVE2


     - name: Add entry in pg_hba file for epas10,11,12 DB engine
       blockinfile:
          path: /var/lib/edb/{{epasdbname.stdout}}/data/pg_hba.conf
          marker: "# {mark} ANSIBLE MANAGED BLOCK FOR EFM"
          block: |
              host edb edbefm {{ ip1 }}/32 md5
              host edb edbefm {{ ip2 }}/32 md5
              host edb edbefm {{ ip3 }}/32 md5
              host edb edbefm {{ selfip }}/32 md5 
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname == NEWSLAVE
    
     - name: Add entry in pg_hba file for pg10,11,12 DB engine
       blockinfile:
          path: /var/lib/pgsql/{{pgdbname.stdout}}/data/pg_hba.conf
          marker: "# {mark} ANSIBLE MANAGED BLOCK FOR EFM"
          block: |
              host postgres edbefm {{ ip1 }}/32 md5
              host postgres edbefm {{ ip2 }}/32 md5
              host postgres edbefm {{ ip3 }}/32 md5
              host postgres edbefm {{ selfip }}/32 md5
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12' and inventory_hostname == NEWSLAVE


     - name: Reload PG service 
       systemd:
            name: postgresql-{{pgdbname.stdout}}
            state: reloaded
       become: yes 
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12' and inventory_hostname == NEWSLAVE

     - name: Reload EPAS service
       systemd:
            name: edb-as-{{servicename.stdout}}
            state: reloaded
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname == NEWSLAVE
   
     - name: Install Software
       yum:
           name: "{{ packages }}"
       vars:
           packages:
              - java-1.8.0-openjdk
              - mailx
              - edb-efm38
       become: yes
       when: inventory_hostname == NEWSLAVE

     - name: Make copy of efm properties file
       copy:
           src: /etc/edb/efm-3.8/efm.properties.in
           dest: /etc/edb/efm-3.8/efm.properties
           owner: efm
           group: efm
           remote_src: yes    
       become: yes
       when: inventory_hostname == NEWSLAVE

     - name: Make copy of efm nodes file
       copy:
           src: /etc/edb/efm-3.8/efm.nodes.in
           dest: /etc/edb/efm-3.8/efm.nodes   
           owner: efm
           group: efm
           remote_src: yes
       become: yes
       when: inventory_hostname == NEWSLAVE

     - name: Fetch encrypted password
       shell: /usr/edb/efm-3.8/bin/efm encrypt efm --from-env
       environment:
           EFMPASS: '{{ EFM_USER_PASSWORD }}'
       register: pass_opt
       when: inventory_hostname == NEWSLAVE and inventory_hostname != MASTER and inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2

     - name: Modify efm.properties file
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-{{servicename.stdout}}'}
            - { From: 'user.email=', To: 'user.email={{NOTIFICATION_EMAIL}}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/{{epasdbname.stdout}}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/{{epasdbname.stdout}}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ selfip }}:7800'}
            - { From: 'restore.command=', To: 'restore.command=scp enterprisedb@%h:/backup/%f %p'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       ignore_errors: true
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname == NEWSLAVE

     - name: Modify efm.properties file
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5432'}
            - { From: 'db.database=', To: 'db.database=postgres'}
            - { From: 'db.service.owner=', To: 'db.service.owner=postgres'}
            - { From: 'db.service.name=', To: 'db.service.name=postgresql-{{pgdbname.stdout}}'}
            - { From: 'user.email=', To: 'user.email={{NOTIFICATION_EMAIL}}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/pgsql-{{pgdbname.stdout}}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/pgsql/{{pgdbname.stdout}}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ selfip }}:7800'}
            - { From: 'restore.command=', To: 'restore.command=scp postgres@%h:/backup/%f %p'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       ignore_errors: true
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'  and inventory_hostname == NEWSLAVE

     - name: Modify efm.nodes file
       blockinfile:
           path: /etc/edb/efm-3.8/efm.nodes
           block: |
              {{ ip1 }}:7800
              {{ ip2 }}:7800
              {{ ip3 }}:7800
              {{ NEWSLAVE }}:7800
       become: yes
       when: inventory_hostname == NEWSLAVE
 
  
     - name: Start EFM service
       systemd:
           name: efm-3.8
           state: started
       become: yes
       when: inventory_hostname == NEWSLAVE

     - name: Make service persistance for DB Engine epas10,11,12
       systemd:
             name: "{{ item }}"
             enabled: yes
       with_items:
            - efm-3.8
            - edb-as-{{servicename.stdout}}
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname == NEWSLAVE
 
     - name: Make service persistance for DB Engine pg10,11,12
       systemd:
             name: "{{ item }}"
             enabled: yes
       with_items:
            - efm-3.8
            - postgresql-{{pgdbname.stdout}}
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12' and inventory_hostname == NEWSLAVE
