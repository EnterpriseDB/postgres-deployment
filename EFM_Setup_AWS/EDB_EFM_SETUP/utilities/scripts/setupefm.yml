---
 - hosts: all

   tasks:


     - name: Install the latest edb repo if DB engine is pg10,11,12 DB engine
       yum:
         name: https://yum.enterprisedb.com/edb-repo-rpms/edb-repo-latest.noarch.rpm
         state: present
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Move repo file if dbengine is pg10,11,12 DB engine
       shell: mv /etc/yum.repos.d/edb.repo /etc/yum.repos.d/edb.repo.bkp
       become: yes 
       become_user: root
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Create repo file if dbengine is pg10,11,12 DB engine
       blockinfile:
         path: /etc/yum.repos.d/edb.repo
         create: yes
         block: |
            [edb]
            name=EnterpriseDB RPMs $releasever - $basearch
            baseurl=https://{{USER}}:{{PASS}}@yum.enterprisedb.com/edb/redhat/rhel-$releasever-$basearch
            enabled=1
            gpgcheck=1
            gpgkey=file:///etc/pki/rpm-gpg/ENTERPRISEDB-GPG-KEY
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12' 
   
     - name: Install psycopg2
       yum: 
         name:  python-psycopg2
         state: present
       become: yes

     - name: Replace value as per DB engine for epas10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g' | sed 's/^/as/' 
       register: epasdbname
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'

     - name: Replace value as per DB engine for pg10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g' 
       register: pgdbname
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'
  
     - name: Get service name for epas10,11,12 DB engine
       shell: echo "{{DB_ENGINE}}"| sed 's/[^0-9]*//g'
       register: servicename
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'
          
 
     - name: Create Role for EFM for epas10,11,12 DB engine
       postgresql_query:
            db: edb
            login_user: "{{DBUSER}}"
            port: 5444
            login_host: 127.0.0.1
            query: "{{ item }}"
       with_items:
            - CREATE ROLE edbefm WITH  LOGIN ENCRYPTED PASSWORD '{{ EFM_USER_PASSWORD }}'
            - GRANT pg_read_all_settings TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_current_wal_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_last_wal_replay_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_resume() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_pause() TO edbefm
       become: yes
       ignore_errors: true
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2 

     - name: Create Role for EFM for pg10,11,12 DB engine
       postgresql_query:
            db: postgres
            login_user: "{{DBUSER}}"
            port: 5432
            login_host: 127.0.0.1
            query: "{{ item }}"
       with_items:
            - CREATE ROLE edbefm WITH  LOGIN ENCRYPTED PASSWORD '{{ EFM_USER_PASSWORD }}'
            - GRANT pg_read_all_settings TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_current_wal_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_last_wal_replay_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_resume() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_pause() TO edbefm
       become: yes
       ignore_errors: true
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12' and inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2           

     - name: Add entry in pg_hba file for epas10,11,12 DB engine
       blockinfile:
          path: /var/lib/edb/{{epasdbname.stdout}}/data/pg_hba.conf
          marker: "# {mark} ANSIBLE MANAGED BLOCK FOR EFM" 
          block: |
              host edb edbefm {{ ip1 }}/32 md5
              host edb edbefm {{ ip2 }}/32 md5
              host edb edbefm {{ ip3 }}/32 md5
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'
    
     - name: Add entry in pg_hba file for pg10,11,12 DB engine
       blockinfile:
          path: /var/lib/pgsql/{{pgdbname.stdout}}/data/pg_hba.conf
          marker: "# {mark} ANSIBLE MANAGED BLOCK FOR EFM"
          block: |
              host postgres edbefm {{ ip1 }}/32 md5
              host postgres edbefm {{ ip2 }}/32 md5
              host postgres edbefm {{ ip3 }}/32 md5
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'


     - name: Reload PG service if dbengine is pg10,11,12
       systemd:
          name: postgresql-{{pgdbname.stdout}}
          state: reloaded
       become: yes 
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'

     - name: Reload EPAS service if dbengine is epas10,11,12
       systemd:
          name: edb-as-{{servicename.stdout}}
          state: reloaded
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'
   
     - name: Install Software for EFM
       yum:
          name: "{{ packages }}"
       vars:
           packages:
              - java-1.8.0-openjdk
              - mailx
              - edb-efm38
       become: yes

     - name: Make copy of efm properties file
       copy:
           src: /etc/edb/efm-3.8/efm.properties.in
           dest: /etc/edb/efm-3.8/efm.properties
           owner: efm
           group: efm
           remote_src: yes    
       become: yes

     - name: Make copy of efm nodes file
       copy:
           src: /etc/edb/efm-3.8/efm.nodes.in
           dest: /etc/edb/efm-3.8/efm.nodes   
           owner: efm
           group: efm
           remote_src: yes
       become: yes

     - name: Fetch encrypted password
       shell: /usr/edb/efm-3.8/bin/efm encrypt efm --from-env
       environment:
           EFMPASS: '{{ EFM_USER_PASSWORD }}'
       register: pass_opt

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-{{ servicename.stdout }}'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/{{ epasdbname.stdout }}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/{{ epasdbname.stdout }}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip1 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-{{ servicename.stdout }}'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/{{ epasdbname.stdout }}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/{{ epasdbname.stdout }}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip2 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname != MASTER and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-{{ servicename.stdout }}'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/{{ epasdbname.stdout }}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/{{ epasdbname.stdout }}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip3 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12' and inventory_hostname != SLAVE1 and inventory_hostname != MASTER

     - name: Modify efm.properties file for pg
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5432'}
            - { From: 'db.database=', To: 'db.database=postgres'}
            - { From: 'db.service.owner=', To: 'db.service.owner=postgres'}
            - { From: 'db.service.name=', To: 'db.service.name=postgresql-{{pgdbname.stdout}}'}
            - { From: 'user.email=', To: 'user.email={{NOTIFICATION_EMAIL}}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/pgsql/{{pgdbname.stdout}}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/pgsql/{{pgdbname.stdout}}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip1 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' and DB_ENGINE != 'pg12' and inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for pg
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5432'}
            - { From: 'db.database=', To: 'db.database=postgres'}
            - { From: 'db.service.owner=', To: 'db.service.owner=postgres'}
            - { From: 'db.service.name=', To: 'db.service.name=postgresql-{{pgdbname.stdout}}'}
            - { From: 'user.email=', To: 'user.email={{NOTIFICATION_EMAIL}}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/pgsql/{{pgdbname.stdout}}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/pgsql/{{pgdbname.stdout}}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip2 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'} 
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' and DB_ENGINE != 'pg12' and inventory_hostname != MASTER and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for pg
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5432'}
            - { From: 'db.database=', To: 'db.database=postgres'}
            - { From: 'db.service.owner=', To: 'db.service.owner=postgres'}
            - { From: 'db.service.name=', To: 'db.service.name=postgresql-{{pgdbname.stdout}}'}
            - { From: 'user.email=', To: 'user.email={{NOTIFICATION_EMAIL}}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/pgsql/{{pgdbname.stdout}}/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/pgsql/{{pgdbname.stdout}}/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ ip3 }}:7800'}
            - { From: 'script.fence=', To: 'script.fence=/var/efm/failover.sh'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' and DB_ENGINE != 'pg12' and inventory_hostname != SLAVE1 and inventory_hostname != MASTER
    
     - name: Modify efm.nodes file
       blockinfile:
           path: /etc/edb/efm-3.8/efm.nodes
           block: |
              {{ ip1 }}:7800
              {{ ip2 }}:7800
              {{ ip3 }}:7800
       become: yes
 
     - name: Copy fencing script
       copy:
           src: failover.sh        
           dest: /var/efm/failover.sh
           owner: efm
           group: efm
           mode: 0755
       become: yes
    
     - name: Modify fencing script
       lineinfile:
            path: /var/efm/failover.sh
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'eip', To: '{{ MASTER }}'}
            - { From: 'region-name', To: '{{ REGION_NAME }}'} 
       become: yes
  
     - name: Start EFM service
       systemd:
           name: efm-3.8
           state: started
       become: yes

     - name: Make service persistance when DB engine is epas
       systemd:
             name: "{{ item }}"
             enabled: yes
       with_items:
            - efm-3.8
            - "edb-as-{{ servicename.stdout }}"
       become: yes
       when: DB_ENGINE == 'epas10' or DB_ENGINE == 'epas11' or DB_ENGINE == 'epas12'

     - name: Make service persistance when DB engine is pg
       systemd:
             name: "{{ item }}"
             enabled: yes
       with_items:
            - efm-3.8
            - "postgresql-{{ pgdbname.stdout }}"
       become: yes
       when: DB_ENGINE == 'pg10' or DB_ENGINE == 'pg11' or DB_ENGINE == 'pg12'
