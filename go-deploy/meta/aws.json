{
	"variables": {
		"credentials": {
			"0": {
				"name": "user_name",
				"type": "string",
				"flag_name": "user-name",
				"flag_description": "EDB Yum Username"
			},
			"1": {
				"name": "user_password",
				"type": "string",
				"flag_name": "user-password",
				"flag_description": "EDB Yum Password"
			},
			"2": {
				"name": "public_key",
				"type": "string",
				"flag_name": "public-key",
				"flag_description": "Location of public key file",
				"default": "~/.ssh/id_rsa.pub"
			},
			"3": {
				"name": "private_key",
				"type": "string",
				"flag_name": "private-key",
				"flag_description": "Location of private key file",
				"default": "~/.ssh/id_rsa"
			}
		},
		"configurations": {
			"0": {
				"name": "operating_system",
				"type": "string",
				"flag_name": "operating-system",
				"flag_description": "Operating system for the EC2 instances",
				"options": ["CentOS7", "RHEL7"]
			},
			"1": {
				"name": "region",
				"type": "string",
				"flag_name": "region",
				"flag_description": "AWS region for the EC2 instances",
				"options": ["us-east-2", "us-east-1", "us-west-1"]
			},
			"2": {
				"name": "ec2_count",
				"type": "int",
				"flag_name": "ec2-count",
				"flag_description": "The number of EC2 instances",
				"validate": {
					"minimum": 1
				}
			},
			"3": {
				"name": "pem_instance_count",
				"type": "int",
				"flag_name": "use-pem",
				"flag_description": "The number of PEM instances",
				"validate": {
					"minimum": 0
				}
			},
			"4": {
				"name": "db_engine",
				"type": "string",
				"flag_name": "db-engine",
				"flag_description": "PostgreSQL DB Engine. [PG|EPAS]",
				"options": ["PostgreSQL", "EDB Postgres Advanced Server"]
			},
			"5": {
				"name": "db_version",
				"type": "string",
				"flag_name": "db-version",
				"flag_description": "PostgreSQL DB Version",
				"options": ["11", "12", "13"]
			},
			"6": {
				"name": "replication",
				"type": "string",
				"flag_name": "replication",
				"flag_description": "PostgreSQL replication type",
				"options": ["synchronous", "asynchronous"]
			},
			"7": {
				"name": "ami_id",
				"type": "string",
				"flag_name": "ami-id",
				"flag_description": "AMI ID for instances"
			},
			"8": {
				"name": "instance_volume_type",
				"type": "string",
				"flag_name": "instance-volume-type",
				"flag_description": "Disk type for instance main volume",
				"options": ["gp2", "io1", "io2"]
			},
			"9": {
				"name": "instance_volume_size",
				"type": "string",
				"flag_name": "instance-volume-size",
				"flag_description": "Instance main volume size"
			},
			"10": {
				"name": "instance_volume_iops",
				"type": "string",
				"flag_name": "instance-volume-iops",
				"flag_description": "Instance main volume size",
				"options": ["250", "350", "3000"],
				"can_add": true
			}
		},
		"hard": {
			"instance_type": "c5.2xlarge"
		},
		"maps": {
			"operating_system": {
				"0": {
					"output": "instance_image",
					"type": "exact",
					"map": {
						"CentOS7": "CentOS Linux 7 x86_64 HVM EBS*",
						"CentOS8": "CentOS 8*",
						"RHEL7": "RHEL-7.8-x86_64*",
						"RHEL8": "RHEL-8.2-x86_64*"
					}
				},
				"1": {
					"output": "ansible_user",
					"type": "starts-with",
					"map": {
						"Cent": "centos",
						"RHEL": "ec2-user"
					}
				}
			}
		}
	},
	"commands": {
		"create-project" : {
			"name": "create-project",
			"short": "Create an AWS project",
			"long": "",
			"credential-groups": {
				"0": {
					"variables": [0, 1, 2, 3]
				}
			},
			"configuration-groups": {
				"0": {
					"variables": [0, 1, 2, 3, 4, 5, 6, 8, 9]
				},
				"1": {
					"variables": [7],
					"condition": {
						"type": "bool",
						"prompt": "Do you want to utilize an AMI ID for the Instances [y/n]?"
					}
				},
				"2": {
					"variables": [10],
					"condition": {
						"type": "variable",
						"equals": {
							"variable": "instance_volume_type",
							"type": "in",
							"options": ["io1", "io2"]
						}
					}
				}
			}
		},
		"update-project" : {
			"name": "update-project",
			"short": "Update an AWS project",
			"long": "",
			"credential-groups": {
				"0": {
					"variables": [0, 1, 2, 3]
				}
			},
			"configuration-groups": {
				"0": {
					"variables": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
				}
			}
		},
		"delete-project" : {
			"name": "delete-project",
			"short": "Update an AWS project",
			"long": ""
		},
		"create-credential" : {
			"name": "create-credential",
			"short": "Create credentials for AWS project",
			"long": "",
			"arguments": {},
			"credential-groups": {
				"0": {
					"variables": [0, 1, 2, 3]
				}
			}
		},
		"update-credential" : {
			"name": "update-credential",
			"short": "Update credentials for AWS project",
			"long": "",
			"arguments": {},
			"credential-groups": {
				"0": {
					"variables": [0, 1, 2, 3]
				}
			}
		},
		"delete-credential" : {
			"name": "delete-credential",
			"short": "Delete credentials for AWS project",
			"long": "",
			"arguments": {}
		},
		"create-configuration" : {
			"name": "create-configuration",
			"short": "Create configuration for AWS project",
			"long": "",
			"arguments": {},
			"configuration-groups": {
				"0": {
					"variables": [0, 1, 2, 3, 4, 5, 6, 8, 9]
				},
				"1": {
					"variables": [7],
					"condition": {
						"type": "bool",
						"prompt": "Do you want to utilize an AMI ID for the Instances [y/n]?"
					}
				},
				"2": {
					"variables": [10],
					"condition": {
						"type": "variable",
						"equals": {
							"variable": "instance_volume_type",
							"type": "in",
							"options": ["io1", "io2"]
						}
					}
				}
			}
		},
		"update-configuration" : {
			"name": "update-configuration",
			"short": "Update configuration for AWS project",
			"long": "",
			"arguments": {},
			"configuration-groups": {
				"0": {
					"variables": [0, 1, 2, 3, 4, 5, 6, 8, 9]
				},
				"1": {
					"variables": [7],
					"condition": {
						"type": "bool",
						"prompt": "Do you want to update the AMI ID configuration [y/n]?"
					}
				},
				"2": {
					"variables": [10],
					"condition": {
						"type": "variable",
						"equals": {
							"variable": "instance_volume_type",
							"type": "in",
							"options": ["io1", "io2"]
						}
					}
				}
			}
		},
		"delete-configuration" : {
			"name": "delete-configuration",
			"short": "Delete configuration for AWS project",
			"long": "",
			"arguments": {}
		},
		"get-project" : {
			"name": "get-project",
			"short": "Get AWS project details",
			"long": "",
			"arguments": {}
		},
		"get-project-names" : {
			"name": "get-project-names",
			"short": "Get list of AWS projects",
			"long": "",
			"arguments": {}
		},
		"run-project" : {
			"name": "run-project",
			"short": "Runs Terraform for AWS project creation",
			"long": "",
			"arguments": {
				"pre_run_checks": {
					"0": {
						"command": "aws ec2 describe-instance-type-offerings --location-type availability-zone  --filters Name=instance-type,Values=%s --region %s --output text",
						"variables": {
							"0": "instance_type",
							"1": "region"
						},
						"output": "instance_exists"
					},
					"1": {
						"command": "aws ec2 describe-images --filters Name=name,Values=\"%s\" --query sort_by(Images,|||&Name)[-1].ImageId --region %s --output text",
						"variables": {
							"0": "instance_image",
							"1": "region"
						},
						"output": "ami_id"
					}
				},
				"terraform_build": {
					"variables": [
						{
							"prefix": "os",
							"variable": "operating_system"
						},
						{
							"prefix": "ami_id",
							"variable": "ami_id"
						},
						{
							"prefix": "aws_region",
							"variable": "region"
						},
						{
							"prefix": "instance_count",
							"variable": "ec2_count"
						},
						{
							"prefix": "ssh_key_path",
							"variable": "public_key"
						},
						{
							"prefix": "cluster_name",
							"variable": "project_name"
						},
						{
							"prefix": "pem_instance_count",
							"variable": "pem_instance_count"
						}
					]
				},
				"post_run_checks": {
					"0": {
						"command": "aws ec2 wait instance-status-ok --region %s",
						"variables": {
							"0": "region"
						},
						"output": "instance_exists",
						"log_text": ""
					}
				}
			}
		},
		"destroy-project" : {
			"name": "destroy-project",
			"short": "Runs Terraform for AWS project destruction",
			"long": "",
			"arguments": {
				"terraform_destroy": {
					"variables": [
						{
							"prefix": "aws_region",
							"variable": "region"
						}
					]
				}
			}
		}
	}
}
