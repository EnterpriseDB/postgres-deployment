#!/usr/bin/env python3
import logging
import os
import sys

from lib import cli
from lib import command
from lib.cloud import CloudCliError
from lib.project import ProjectError
from lib.terraform import TerraformCliError
from lib.ansible import AnsibleCliError

def configure_logging(project, sub_command):

    project.create_log_dir()

    logging.basicConfig(
        filename=project.log_file,
        encoding='utf-8',
        level=logging.DEBUG,
        format='%(asctime)s %(levelname)7s '+sub_command+': %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S',
    )

if __name__ == "__main__":

    try:

        # Parse the commande line
        env = cli.parse()

        # Create a new Commander in charge of executing the sub-command
        commander = command.Commander(env)

        # Configure logging
        configure_logging(commander.project, env.sub_command)
        logging.debug("env=%s", env)

        commander.execute()

    except (
        command.CommanderError,
        CloudCliError,
        ProjectError,
        TerraformCliError,
        AnsibleCliError
    ) as e:
        sys.stderr.write("ERROR: %s\n" % str(e))
        sys.exit(2)
    except KeyboardInterrupt as e:
        sys.exit(1)
    except Exception as e:
        # Unhandled error
        sys.stderr.write("ERROR: %s\n" % str(e))
        logging.exception(str(e))
        sys.exit(2)
