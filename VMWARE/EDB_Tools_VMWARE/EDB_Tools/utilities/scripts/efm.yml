---
 - hosts: all

   tasks:

     - name: Install psycopg2
       yum: 
         name:  python-psycopg2
         state: present
       become: yes
 
     - name: Create Role for EFM for epas10,11,12 DB engine
       postgresql_query:
            db: edb
            login_user: "{{DBUSER}}"
            port: 5444
            login_host: 127.0.0.1
            query: "{{ item }}"
       with_items:
            - CREATE ROLE edbefm WITH  LOGIN ENCRYPTED PASSWORD '{{ EFM_USER_PASSWORD }}'
            - GRANT pg_read_all_settings TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_current_wal_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_last_wal_replay_lsn() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_resume() TO edbefm
            - GRANT EXECUTE ON FUNCTION pg_wal_replay_pause() TO edbefm
       become: yes
       ignore_errors: true
       when: inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2 

     - name: Add entry in pg_hba 
       blockinfile:
          path: /var/lib/edb/as12/data/pg_hba.conf
          marker: "# {mark} ANSIBLE MANAGED BLOCK FOR EFM" 
          block: |
              host edb edbefm {{ MASTER }}/32 md5
              host edb edbefm {{ SLAVE1 }}/32 md5
              host edb edbefm {{ SLAVE2 }}/32 md5
       become: yes
       
     - name: Reload EPAS service
       systemd:
          name: edb-as-12
          state: reloaded
       become: yes
   
     - name: Install Software for EFM
       yum:
          name: "{{ packages }}"
       vars:
           packages:
              - java-1.8.0-openjdk
              - mailx
              - edb-efm38
       become: yes

     - name: Make copy of efm properties file
       copy:
           src: /etc/edb/efm-3.8/efm.properties.in
           dest: /etc/edb/efm-3.8/efm.properties
           owner: efm
           group: efm
           remote_src: yes    
       become: yes

     - name: Make copy of efm nodes file
       copy:
           src: /etc/edb/efm-3.8/efm.nodes.in
           dest: /etc/edb/efm-3.8/efm.nodes   
           owner: efm
           group: efm
           remote_src: yes
       become: yes

     - name: Fetch encrypted password
       shell: /usr/edb/efm-3.8/bin/efm encrypt efm --from-env
       environment:
           EFMPASS: '{{ EFM_USER_PASSWORD }}'
       register: pass_opt

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-12'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/as12/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/as12/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ MASTER }}:7800'}
            - { From: 'restore.command=', To: 'restore.command=scp enterprisedb@%h:/backup/%f %p'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
       become: yes
       when: inventory_hostname != SLAVE1 and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-12'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/as12/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/as12/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ SLAVE1 }}:7800'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
            - { From: 'restore.command=', To: 'restore.command=scp enterprisedb@%h:/backup/%f %p'}
       become: yes
       when: inventory_hostname != MASTER and inventory_hostname != SLAVE2

     - name: Modify efm.properties file for epas
       lineinfile:
            path: /etc/edb/efm-3.8/efm.properties
            regexp: "{{item.From}}"
            line: "{{item.To}}"
       with_items:
            - { From: 'db.user=', To: 'db.user=edbefm'}  
            - { From: 'db.password.encrypted=', To: 'db.password.encrypted={{ pass_opt.stdout }}'}
            - { From: 'db.port=', To: 'db.port=5444'}
            - { From: 'db.database=', To: 'db.database=edb'}
            - { From: 'db.service.owner=', To: 'db.service.owner=enterprisedb'}
            - { From: 'db.service.name=', To: 'db.service.name=edb-as-12'}
            - { From: 'user.email=', To: 'user.email={{ NOTIFICATION_EMAIL }}'}
            - { From: 'is.witness=', To: 'is.witness=false'}
            - { From: 'auto.allow.hosts=false', To: 'auto.allow.hosts=true'}
            - { From: 'stable.nodes.file=false', To: 'stable.nodes.file=true'}
            - { From: 'db.bin=', To: 'db.bin=/usr/edb/as12/bin'}
            - { From: 'db.recovery.dir=', To: 'db.recovery.dir=/var/lib/edb/as12/data/'}
            - { From: 'bind.address=', To: 'bind.address={{ SLAVE2 }}:7800'}
            - { From: 'master.shutdown.as.failure=false', To: 'master.shutdown.as.failure=true'}
            - { From: 'restore.command=', To: 'restore.command=scp enterprisedb@%h:/backup/%f %p'}
       become: yes
       when: inventory_hostname != SLAVE1 and inventory_hostname != MASTER
    
     - name: Modify efm.nodes file
       blockinfile:
           path: /etc/edb/efm-3.8/efm.nodes
           block: |
              {{ MASTER }}:7800
              {{ SLAVE1 }}:7800
              {{ SLAVE2 }}:7800
       become: yes
 
  
     - name: Start EFM service
       systemd:
           name: efm-3.8
           state: started
       become: yes

     - name: Make service persistance when DB engine is epas
       systemd:
             name: "{{ item }}"
             enabled: yes
       with_items:
            - efm-3.8
            - "edb-as-12"
       become: yes
