---
- hosts: localhost
  name: Configure Postgres SQL Replication on Instances
  become: true
  gather_facts: no

  # When using collections
  collections:
      - edb_devops.edb_postgres

  vars_files:
    - hosts.yml

  #initializing internal variables
  vars:
      PEM_SERVER_PRIVATE_IP: ""
      PRIMARY_PRIVATE_IP: ""
      PRIMARY_PUBLIC_IP: ""
      STANDBY_NAMES: []
      ALL_NODE_IPS: []
      EFM_NODES_PRIVATE_IP: []
      EFM_NODES_PUBLIC_IP: []

  pre_tasks:
      - name: Initialize the user defined variables
        set_fact:
            OS: "CentOS7"
            PG_VERSION: "12"
            PG_TYPE: "PG"
            PG_DATA: "/data/pgdata"
            PG_WAL: "/data/pg_wal"
            EDB_YUM_USERNAME: "qmg"
            EDB_YUM_PASSWORD: "EdB123"
            STANDBY_QUORUM_TYPE: "ANY" # Quorum type can be ANY or FIRST

            # This is internal variables processing please do not modify
            ALL_NODE_IPS: "{{ ALL_NODE_IPS + [item.value.private_ip] }}"
            PRIMARY_PRIVATE_IP: "{{ PRIMARY_PRIVATE_IP + item.value.private_ip if(item.value.node_type == 'primary') else PRIMARY_PRIVATE_IP }}"
            PRIMARY_PUBLIC_IP: "{{ PRIMARY_PUBLIC_IP  + item.value.public_ip if(item.value.node_type == 'primary') else PRIMARY_PUBLIC_IP }}"
            PEM_SERVER_PRIVATE_IP: "{{ PEM_SERVER_PRIVATE_IP + item.value.private_ip if(item.value.node_type == 'pemserver') else PEM_SERVER_PRIVATE_IP }}"
        with_dict: "{{ servers }}"

      - name: Gather primary and standby nodes for EFM
        set_fact:
            EFM_NODES_PRIVATE_IP: "{{ EFM_NODES_PRIVATE_IP + [item.value.private_ip] }}"
            EFM_NODES_PUBLIC_IP: "{{ EFM_NODES_PUBLIC_IP + [item.value.public_ip] }}"
        when: item.value.node_type in ['primary', 'standby']
        with_dict: "{{ servers }}"

      - name: Gather the standby names
        set_fact:
            STANDBY_NAMES: "{{ STANDBY_NAMES + [item.key] }}"
        when: item.value.node_type == 'standby'
        with_dict: "{{ servers }}"

  tasks:
    - name: Iterate through repo role with items from hosts file
      include_role:
        name: setup_repo
      with_dict: "{{ servers }}"
    - name: Iterate through install role with items from hosts file
      include_role:
        name: install_dbserver
      with_dict: "{{ servers }}"
    - name: Iterate through initialize role with items from hosts file
      include_role:
        name: init_dbserver
      with_dict: "{{ servers }}"
    - name: Iterate through replication role with items from hosts file
      include_role:
        name: setup_replication
      with_dict: "{{ servers }}"
    - name: Iterate through efm install role with items from hosts file
      include_role:
        name: setup_efm
      with_dict: "{{ servers }}"
    - name: Iterate through pem install role with items from hosts file
      include_role:
        name: setup_pem
      with_dict: "{{ servers }}"
