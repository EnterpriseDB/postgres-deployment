---
    
    - name: Add entry in pg_hba file
      blockinfile:
         path: /var/lib/pgsql/10/data/pg_hba.conf
         marker: "# {mark} ANSIBLE MANAGED BLOCK FOR REPLICATION"
         block: |
           host replication edbrepuser {{ ip1 }}/32 md5
           host replication edbrepuser {{ ip2 }}/32 md5
           host replication edbrepuser {{ ip3 }}/32 md5 
      become: yes
    
    - name: Change parameter in postgresql file
      lineinfile:
         path: /var/lib/pgsql/10/data/postgresql.conf
         regexp: "{{item.From}}"
         line: "{{item.To}}"
      with_items:
         - { From: "#wal_level = replica", To: "wal_level = replica" }
         - { From: "#max_wal_senders = 10", To: "max_wal_senders = 5" }
         - { From: "#max_replication_slots = 10", To: "max_replication_slots = 10" }
         - { From: "#wal_keep_segments = 0", To: "wal_keep_segments = 500" }
         - { From: "#hot_standby = on", To: "hot_standby = on" }
         - { From: "#hot_standby_feedback = off", To: "hot_standby_feedback = on" }
         - { From: "#max_logical_replication_workers = 4", To: "max_logical_replication_workers = 6" }
         - { From: "#max_sync_workers_per_subscription = 2", To: "max_sync_workers_per_subscription = 2" }
         - { From: "#listen_addresses = 'localhost'", To: "listen_addresses = '*'" } 
         - { From: "max_connections = 100", To: "max_connections = 200" }
         - { From: "#archive_mode = off", To: "archive_mode = on" }
         - { From: "#archive_command = ''", To: "archive_command = 'aws s3 cp %p s3://{{ S3BUCKET }}/%f'"}
      become: yes
  
    - name: Change synchronous_commit setting if replication type is synchronous
      lineinfile:
        path: /var/lib/pgsql/10/data/postgresql.conf
        regexp: '^#synchronous_commit = on'
        line: synchronous_commit = on
      become: yes
      when: REPLICATION_TYPE == 'synchronous'
     
    - name: Restart service
      systemd:
         name: postgresql-10
         state: restarted
      become: yes


    - name: Create replication role
      shell: |
         psql -d postgres -U {{PGDBUSER}} -c "CREATE ROLE edbrepuser WITH REPLICATION LOGIN PASSWORD '{{ REPLICATION_USER_PASSWORD }}'"
         psql -d postgres -U {{PGDBUSER}} -c "ALTER USER {{PGDBUSER}} WITH ENCRYPTED PASSWORD '{{DBPASSWORD}}'"
      become: yes
      
           
    
