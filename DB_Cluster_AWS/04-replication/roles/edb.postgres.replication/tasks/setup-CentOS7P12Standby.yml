---
# Standby configuration settings

# Display details of Node being configured
- name: Display current Standby Node to Configure
  block:
    - debug:
        msg: 
            "Operating System = {{ OS }}:
             Postgres Version = {{ PG_VERSION }},
             Node Type = {{ item.value.node_type }},
             Public IP = {{ item.value.public_ip }},
             S3BUCKET = {{ S3BUCKET }},
             PUBLIC_IP = {{ PUBLIC_IP }},
             EDBREPUSER = {{ EDBREPUSER }},
             REPLICATION_TYPE = {{ REPLICATION_TYPE }},
             REPLICATION_USER_PASSWORD = {{ REPLICATION_USER_PASSWORD }},
             Private IP 1 = {{ item.value.private_ip1 }},
             Private IP 2 = {{ item.value.private_ip2 }},
             PRIVATE_IP1 = {{ PRIVATE_IP1 }},
             PRIVATE_IP2 = {{ PRIVATE_IP2 }},
             POSTGRES12 BIN FOLDER = {{ POSTGRES12_BIN_FOLDER }},
             POSTGRES12 DATA FOLDER = {{ POSTGRES12_DATA_FOLDER }}"

- name: Create pgpass file
  lineinfile:
    path: /var/lib/edb/.pgpass
    line: "*:5444:*:{{ EDBREPUSER }}:{{ REPLICATION_USER_PASSWORD }}"
    create: yes
    owner: postgres
    group: postgres
    mode: '0600'
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Stop DB service
  shell: |
    systemctl stop postgresql-12.service
  become: yes
  delegate_to: "{{ item.value.public_ip }}"
                                                                                                                 
- name: Delete data directory
  file:
    path: "{{ POSTGRES12_DATA_FOLDER }}"
    state: absent
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Take pgbase back-up
  shell: |
    PGPASSWORD="{{ REPLICATION_USER_PASSWORD }}" {{ POSTGRES12_BIN_FOLDER }}pg_basebackup -R -D {{ POSTGRES12_DATA_FOLDER }} --host={{ item.value.private_ip1 }} --port=5432 --username={{ EDBREPUSER }}
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Change permission of data directory
  file:
    path: "{{ POSTGRES12_DATA_FOLDER }}"
    state: directory
    owner: postgres
    group: postgres
    recurse: yes
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Uncomment parameters in postgresql.conf file
  lineinfile:
    path: "{{ POSTGRES12_DATA_FOLDER }}postgresql.conf"
    regexp: "{{item.From}}"
    line: "{{item.To}}"
  with_items:
    - { From: "^#promote_trigger_file = ''", To: "promote_trigger_file = '{{ POSTGRES12_DATA_FOLDER }}waltrigger'" }
    # AWS CLI must be installed on each standby node in order for the command to work from each node
    #- { From: "^#restore_command = ''", To: "restore_command = 'aws s3 cp s3://{{ S3BUCKET }}/%f %p'" }
    - { From: "#recovery_target_timeline = 'latest'", To: "recovery_target_timeline = 'latest'" }
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Configure Replication Parameters in postgresql.conf file if synchronous replication
  shell: | 
    sed -i "s@#primary_conninfo = ''@primary_conninfo = 'user={{ EDBREPUSER }} password={{ REPLICATION_USER_PASSWORD }} host={{ PRIVATE_IP1 }} port=5444 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any application_name=slave1'@g" {{ POSTGRES12_DATA_FOLDER }}postgresql.conf
    sed -i -e 's/target_session_attrs=any/& application_name=slave1/' {{ POSTGRES12_DATA_FOLDER }}postgresql.auto.conf 
  become: yes
  when: REPLICATION_TYPE == 'synchronous'
  delegate_to: "{{ PUBLIC_IP }}"

- name: Configure Replication Connection Parameters in postgresql.conf file if synchronous replication
  shell: |
    sed -i "s@#primary_conninfo = ''@primary_conninfo = 'user={{ EDBREPUSER }} password={{ REPLICATION_USER_PASSWORD }} host={{ PRIVATE_IP1 }} port=5444 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any application_name=slave2'@g" '{{ POSTGRES12_DATA_FOLDER }}postgresql.conf'
    sed -i -e 's/target_session_attrs=any/& application_name=slave2/' '{{ POSTGRES12_DATA_FOLDER }}postgresql.auto.conf'
  become: yes
  when: REPLICATION_TYPE == 'synchronous'
  delegate_to: "{{ item.value.public_ip }}"

- name: Add Replication IP Address 1 Entry to pg_hba Configuration File
  lineinfile:
    path: "{{ POSTGRES12_DATA_FOLDER }}pg_hba.conf"
    line: host replication {{ EDBREPUSER }} {{ PRIVATE_IP2 }}/32 md5
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Add Replication IP Address 2 Entry to pg_hba Configuration File
  lineinfile:
    path: "{{ POSTGRES12_DATA_FOLDER}}pg_hba.conf"
    line: host replication {{ EDBREPUSER }} {{ PRIVATE_IP1 }}/32 md5
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Wait for 10 seconds
  wait_for:
    timeout: 10
  delegate_to: "{{ PUBLIC_IP }}"

- name: Restart DB service
  shell: |
    systemctl restart postgresql-12.service
  become: yes
  delegate_to: "{{ item.value.public_ip }}"
 
