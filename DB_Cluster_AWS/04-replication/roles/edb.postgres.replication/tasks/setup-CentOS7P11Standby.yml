---
# Standby configuration settings

# Display details of Node being configured
- name: Display Details of Standby Node to Configure
  block:
    - debug:
        msg: 
            "Operating System = {{ OS }}:
             Postgres Version = {{ PG_VERSION }},
             Node Type = {{ item.value.node_type }},
             Public IP = {{ item.value.public_ip }},
             S3BUCKET = {{ S3BUCKET }},
             PUBLIC_IP = {{ PUBLIC_IP }},
             EDBREPUSER = {{ EDBREPUSER }},
             REPLICATION_TYPE = {{ REPLICATION_TYPE }},
             REPLICATION_USER_PASSWORD = {{ REPLICATION_USER_PASSWORD }},
             Private IP 1 = {{ item.value.private_ip1 }},
             Private IP 2 = {{ item.value.private_ip2 }},
             PRIVATE_IP1 = {{ PRIVATE_IP1 }},
             PRIVATE_IP2 = {{ PRIVATE_IP2 }},
             POSTGRES11 BIN FOLDER = {{ POSTGRES11_BIN_FOLDER }},
             POSTGRES11 DATA FOLDER = {{ POSTGRES11_DATA_FOLDER }}"

- name: Create pgpass file
  lineinfile:
    path: "{{ POSTGRES11_PGPASS_FOLDER_AND_FILE }}"
    line: "*:{{ REPLICATION_PORT }}:*:{{ EDBREPUSER }}:{{ REPLICATION_USER_PASSWORD }}"
    create: yes
    owner: "{{ PGDBUSER }}"
    group: "{{ PGDBUSER }}"
    mode: '0600'
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Stop Postgres Database Service
  shell: |
    systemctl stop postgresql-11.service
  become: yes
  delegate_to: "{{ item.value.public_ip }}"
                                                                                                                 
- name: Initialize Postgres Data Folder
  file:
    path: "{{ POSTGRES11_DATA_FOLDER }}"
    state: absent
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Perform pgbase back-up
  shell: |
    PGPASSWORD="{{ REPLICATION_USER_PASSWORD }}" {{ POSTGRES11_BIN_FOLDER }}pg_basebackup -R -D {{ POSTGRES11_DATA_FOLDER }} --host={{ item.value.private_ip1 }} --port={{ REPLICATION_PORT }} --username={{ EDBREPUSER }}
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Change Permissions of Data Folder
  file:
    path: "{{ POSTGRES11_DATA_FOLDER }}"
    state: directory
    owner: "{{ PGDBUSER }}"
    group: "{{ PGDBUSER }}"
    recurse: yes
  become: yes
  delegate_to: "{{ item.value.public_ip }}"

- name: Create recovery.conf file
  blockinfile:
    path: "{{ POSTGRES11_DATA_FOLDER }}recovery.conf"
    create: yes
    owner: "{{ PGDBUSER }}"
    group: "{{ PGDBUSER }}"
    block: |
      trigger_file = '{{ POSTGRES11_DATA_FOLDER }}waltrigger'
      # This will not work without having the AWS CLI Installed and AWS Credentials configured.
      #restore_command = 'aws s3 cp s3://{{ S3BUCKET }}/%f %p'
      recovery_target_timeline = 'latest'
  become: yes
                                                         
- name: Update recovery.conf File
    shell: sed -i -e 's/target_session_attrs=any/& application_name=slave1/' "{{ POSTGRES11_DATA_FOLDER }}recovery.conf"
    become: yes
  when: REPLICATION_TYPE == 'synchronous'
                                                                            
- name: Modify recovery.conf file if replication type synchronous
  shell: sed -i -e 's/target_session_attrs=any/& application_name=slave2/' "{{ POSTGRES11_DATA_FOLDER }}recovery.conf"
  become: yes
  when: REPLICATION_TYPE == 'synchronous'
                                                                                         
- name: Remove extra lines in file
  shell: sed -i '$ d' "{{ POSTGRES11_DATA_FOLDER }}postgresql.conf"
  become: yes 
  
- name: Add Replication IP Address 1 Entry to pg_hba Configuration File
  lineinfile:
    path: "{{ POSTGRES11_DATA_FOLDER }}pg_hba.conf"
    line: host replication {{ EDBREPUSER }} {{ PRIVATE_IP2 }}/32 md5
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Add Replication IP Address 2 Entry to pg_hba Configuration File
  lineinfile:
    path: "{{ POSTGRES11_DATA_FOLDER}}pg_hba.conf"
    line: host replication {{ EDBREPUSER }} {{ PRIVATE_IP1 }}/32 md5
  become: yes
  delegate_to: "{{ PUBLIC_IP }}"

- name: Wait for 10 seconds
  wait_for:
    timeout: 10
  delegate_to: "{{ PUBLIC_IP }}"

- name: Restart DB service
  shell: |
    systemctl restart postgresql-11.service
  become: yes
  delegate_to: "{{ item.value.public_ip }}"
